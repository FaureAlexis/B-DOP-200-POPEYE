version : '3'

services:
  poll:
    image: python:3
    build:
      context: "./poll"
      dockerfile: "Dockerfile"
    networks:
      - poll-tier  
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "password"
    depends_on:
      - redis
    ports: 
      - "5002:80"
    restart: "on-failure"  

  redis:
    image: redis
    expose:
      - 6379
    depends_on:
      - db
    networks:
      - poll-tier
      - back-tier
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "password"
    ports:
      - "6379:6379"
    restart: "on-failure"  
    
  worker:
    build:
      context: "worker/"
      dockerfile: "Dockerfile"
    networks: 
      - back-tier  
    depends_on:
      - db
      - redis  
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "password"
    restart: "on-failure"  
  
  result:
    image: node:12-alpine
    build:
      context: "./result/"
      dockerfile: "Dockerfile"
    networks:
      - result-tier  
    environment:
      PORT: 80
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "password"
    depends_on:
      - db
      - redis
      - worker
      - poll
    ports:
      - "5001:80"
    restart: "on-failure"
  
  db:
    image: postgres:latest
    container_name: db
    expose:
      - 5432
    ports:
      - "5432:5432"
    networks:
      - result-tier
      - back-tier
    volumes:
      - db-data:/var/lib/postgresql/data 
      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "password"
    restart: "always"  


volumes:
  db-data:

networks:
  poll-tier:
    driver: bridge
  result-tier:
    driver: bridge
  back-tier: 
    driver: bridge       